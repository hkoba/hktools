#autoload -*- mode: shell-script; sh-shell: zsh; coding: utf-8 -*-

emulate -L zsh

setopt local_options extended_glob err_return

local o_quiet o_help
local usage="Usage: $0 [-h] [-q] [-R] HOST"

zparseopts -D -K q=o_quiet h=o_help R=o_Rebuild

if ((! ARGC)) || (($#o_help)); then
    print 1>&2 $usage
    return 1
fi

local host=$1; shift

local tmpDir
if [[ -d /run/user && -d /run/user/$UID ]]; then
    tmpDir=/run/user/$UID
elif [[ -d ~/.ssh ]]; then
    tmpDir=~/.ssh/tmp
    mkdir -p $tmpDir
else
    echo "Can't find private tempdir, stopped"
    return 1
fi
local scriptFn=$tmpDir/git-ssh-$host
local ctrlDir=$scriptFn.d
local ssh_ctrl=$ctrlDir/ssh-%h%p

if (($#o_Rebuild)) || [[ ! -e $scriptFn ]]; then
    (($#o_quiet)) || echo 1>&2 Creating proxy script $scriptFn
sed -e "s,@ORIG_HOST@,$host,g" -e "s,@SSH_CTRL@,$ssh_ctrl,g" > $scriptFn <<'EOF'
#!/bin/zsh
emulate -L zsh

spec=(
  p=o_port
  x=o_nox
  T=o_notty
  X=o_withx
  Y=o_withxauth

  'o+:=o_opts'
  'L:=o_Lforw'
)
zparseopts -D -K $spec
opts=(
$o_port
$o_nox
$o_notty
$o_withx
$o_withxauth

$o_opts
$o_Lforw
)

host=$1; shift
orig_host=@ORIG_HOST@
if [[ $host == $orig_host ]]; then
  ssh -S @SSH_CTRL@ $opts $host "$@"
else
  ssh -A -S @SSH_CTRL@ $orig_host ssh -q $opts $host "$@"
fi
EOF
fi

[[ -x $scriptFn ]] || chmod a+x $scriptFn

[[ -d $ctrlDir ]] || mkdir -p $ctrlDir

zmodload zsh/zpty
zpty -b GIT_SSH-$host ssh -A -M -o ControlPath=$ssh_ctrl $host /bin/sh
# -o ControlPersist=yes

export GIT_SSH=$scriptFn

(($#o_quiet)) || echo GIT_SSH=$scriptFn
